{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/bravesoft/Archive/graphql/upload-img/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/bravesoft/Archive/graphql/upload-img/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation singleUpload($file: Upload!) {\\n    singleUpload(file: $file) {\\n      filename\\n      mimetype\\n      encoding\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './App.css';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nexport const SINGLE_UPLOAD = gql(_templateObject());\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Mutation, {\n    mutation: MutationPhase.ADD_TO_WISH_LIST,\n    refetchQueries: () => {\n      return [{\n        query: QueryPhase.WISH_LIST,\n        variables: {\n          group_id: localStorage.getItem('group_id'),\n          current_page: 1\n        }\n      }];\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, addToWishList => React.createElement(Button, {\n    className: \"btn-supplier-product-page btn-wish-list\",\n    onClick: () => {\n      var wish_list_obj = {\n        group_id: this.state.group_id,\n        product_id: parseInt(this.state.product_id),\n        product_option_id: parseInt(productSupplier.product_option.id),\n        product_supplier_id: parseInt(productSupplier.id)\n      };\n      addToWishList({\n        variables: wish_list_obj\n      }); // Add to current Wish List\n\n      let current_wish_list = this.state.product_wish_list;\n      current_wish_list.push(wish_list_obj);\n      this.setState({\n        product_wish_list: current_wish_list\n      }); // Then show wish list modal\n\n      this.openOpenWLModal(colorSize, productSupplier.price);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Add, {\n    className: classes.icons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), \" \\u304A\\u6C17\\u306B\\u5165\\u308A\\u306B\\u8FFD\\u52A0\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bravesoft/Archive/graphql/upload-img/src/App.js"],"names":["React","Query","gql","SINGLE_UPLOAD","App","MutationPhase","ADD_TO_WISH_LIST","query","QueryPhase","WISH_LIST","variables","group_id","localStorage","getItem","current_page","addToWishList","wish_list_obj","state","product_id","parseInt","product_option_id","productSupplier","product_option","id","product_supplier_id","current_wish_list","product_wish_list","push","setState","openOpenWLModal","colorSize","price","classes","icons"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,aAAa,GAAGD,GAAH,mBAAnB;;AAWP,SAASE,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,aAAa,CAACC,gBAAlC;AAAoD,IAAA,cAAc,EAAE,MAAM;AACpE,aAAO,CAAC;AACNC,QAAAA,KAAK,EAAEC,UAAU,CAACC,SADZ;AAENC,QAAAA,SAAS,EAAE;AAACC,UAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;AAA6CC,UAAAA,YAAY,EAAE;AAA3D;AAFL,OAAD,CAAP;AAID,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKC,aAAa,IACZ,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,yCAAlB;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIC,aAAa,GAAG;AAClBL,QAAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWN,QADH;AAElBO,QAAAA,UAAU,EAAEC,QAAQ,CAAC,KAAKF,KAAL,CAAWC,UAAZ,CAFF;AAGlBE,QAAAA,iBAAiB,EAAED,QAAQ,CAACE,eAAe,CAACC,cAAhB,CAA+BC,EAAhC,CAHT;AAIlBC,QAAAA,mBAAmB,EAAEL,QAAQ,CAACE,eAAe,CAACE,EAAjB;AAJX,OAApB;AAMAR,MAAAA,aAAa,CAAC;AAAEL,QAAAA,SAAS,EAAEM;AAAb,OAAD,CAAb,CAPa,CASb;;AACA,UAAIS,iBAAiB,GAAG,KAAKR,KAAL,CAAWS,iBAAnC;AACAD,MAAAA,iBAAiB,CAACE,IAAlB,CAAuBX,aAAvB;AACA,WAAKY,QAAL,CAAc;AAACF,QAAAA,iBAAiB,EAAED;AAApB,OAAd,EAZa,CAcb;;AACA,WAAKI,eAAL,CAAqBC,SAArB,EAAgCT,eAAe,CAACU,KAAhD;AACC,KAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,sDAPN,CADF,CADF;AAiCD;;AAED,eAAe7B,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nexport const SINGLE_UPLOAD = gql`\n  mutation singleUpload($file: Upload!) {\n    singleUpload(file: $file) {\n      filename\n      mimetype\n      encoding\n    }\n  }\n`\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Mutation mutation={MutationPhase.ADD_TO_WISH_LIST} refetchQueries={() => {\n            return [{\n              query: QueryPhase.WISH_LIST,\n              variables: {group_id: localStorage.getItem('group_id'), current_page: 1}\n            }]\n          }}>\n          {addToWishList => (\n            <Button className=\"btn-supplier-product-page btn-wish-list\"\n              onClick={() => {\n                var wish_list_obj = {\n                  group_id: this.state.group_id,\n                  product_id: parseInt(this.state.product_id),\n                  product_option_id: parseInt(productSupplier.product_option.id),\n                  product_supplier_id: parseInt(productSupplier.id)\n                };\n                addToWishList({ variables: wish_list_obj});\n\n                // Add to current Wish List\n                let current_wish_list = this.state.product_wish_list;\n                current_wish_list.push(wish_list_obj);\n                this.setState({product_wish_list: current_wish_list});\n\n                // Then show wish list modal\n                this.openOpenWLModal(colorSize, productSupplier.price);\n                }}>\n              <Add className={classes.icons} /> お気に入りに追加\n            </Button>\n          )}\n        </Mutation>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}