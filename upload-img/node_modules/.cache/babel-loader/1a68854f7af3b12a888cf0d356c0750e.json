{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/khanhpn/Project/skeleton_graphql/upload-img/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/khanhpn/Project/skeleton_graphql/upload-img/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation singleUpload($file: Upload!) {\\n    singleUpload(file: $file) {\\n      filename\\n      mimetype\\n      encoding\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Dropzone from 'react-dropzone';\nexport const SINGLE_UPLOAD = gql(_templateObject());\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.onDrop = files => {\n      this.setState({\n        files\n      });\n    };\n\n    this.state = {\n      files: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Mutation, {\n      mutation: SINGLE_UPLOAD,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, singleUpload => React.createElement(Dropzone, {\n      onDrop: ([file]) => singleUpload({\n        variables: {\n          file\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Try dropping some files here\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/khanhpn/Project/skeleton_graphql/upload-img/src/App.js"],"names":["React","Component","Mutation","gql","Dropzone","SINGLE_UPLOAD","App","constructor","onDrop","files","setState","state","render","singleUpload","file","variables"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,MAAMC,aAAa,GAAGF,GAAH,mBAAnB;AAUP,eAAe,MAAMG,GAAN,SAAkBL,SAAlB,CAA4B;AACzCM,EAAAA,WAAW,GAAG;AACZ;;AACA,SAAKC,MAAL,GAAeC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AACD,KAFD;;AAGA,SAAKE,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEP,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,YAAY,IACX,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,CAAC,CAACC,IAAD,CAAD,KAAYD,YAAY,CAAC;AAACE,QAAAA,SAAS,EAAE;AAC3CD,UAAAA;AAD2C;AAAZ,OAAD,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJF,CAFJ,CADF,CADF;AAcD;;AA1BwC","sourcesContent":["import React, {Component} from 'react'\nimport './App.css';\nimport {Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Dropzone from 'react-dropzone'\n\nexport const SINGLE_UPLOAD = gql`\n  mutation singleUpload($file: Upload!) {\n    singleUpload(file: $file) {\n      filename\n      mimetype\n      encoding\n    }\n  }\n`\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.onDrop = (files) => {\n      this.setState({files})\n    };\n    this.state = {\n      files: []\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Mutation mutation={SINGLE_UPLOAD}>\n          {singleUpload => (\n            <Dropzone\n              onDrop={([file]) => singleUpload({variables: {\n                file\n              }})}>\n              <p>Try dropping some files here</p>\n            </Dropzone>\n          )}\n        </Mutation>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}