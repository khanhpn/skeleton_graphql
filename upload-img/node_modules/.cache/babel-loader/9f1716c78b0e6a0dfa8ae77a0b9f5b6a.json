{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/khanhpn/Project/skeleton_graphql/upload-img/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/khanhpn/Project/skeleton_graphql/upload-img/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation singleUpload($file: Upload!) {\\n    singleUpload(file: $file) {\\n      filename\\n      mimetype\\n      encoding\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './App.css';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Dropzone from 'react-dropzone';\nexport const SINGLE_UPLOAD = gql(_templateObject());\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Mutation, {\n    mutation: SINGLE_UPLOAD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, singleUpload => React.createElement(Dropzone, {\n    onDrop: acceptedFiles => console.log(acceptedFiles),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" \", ({\n    getRootProps,\n    getInputProps\n  }) => React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Drag 'n' drop some files here, or click to select files\"))), \" \")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/khanhpn/Project/skeleton_graphql/upload-img/src/App.js"],"names":["React","Mutation","gql","Dropzone","SINGLE_UPLOAD","App","singleUpload","acceptedFiles","console","log","getRootProps","getInputProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,MAAMC,aAAa,GAAGF,GAAH,mBAAnB;;AAWP,SAASG,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAED,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,YAAY,IACnB,oBAAE,QAAF;AAAW,IAAA,MAAM,EACfC,aAAa,IAAIC,OAAO,CAACC,GAAR,CAAYF,aAAZ,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGE,CAAC;AAACG,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAAD,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,CADF,CAJJ,MAFM,CADF,CADF;AAoBD;;AAED,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Dropzone from 'react-dropzone'\n\nexport const SINGLE_UPLOAD = gql`\n  mutation singleUpload($file: Upload!) {\n    singleUpload(file: $file) {\n      filename\n      mimetype\n      encoding\n    }\n  }\n`\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Mutation mutation={SINGLE_UPLOAD}>\n      {singleUpload => (\n< Dropzone onDrop = {\n  acceptedFiles => console.log(acceptedFiles)\n} > {\n  ({getRootProps, getInputProps}) => (\n    <section>\n      <div {...getRootProps()}>\n        <input {...getInputProps()}/>\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n    </section>\n  )\n} < /Dropzone>\n      )}\n    </Mutation>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}