{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/bravesoft/Archive/graphql/upload-img/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/bravesoft/Archive/graphql/upload-img/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation singleUpload($file: Upload!) {\\n    singleUpload(file: $file) {\\n      filename\\n      mimetype\\n      encoding\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './App.css';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nexport const SINGLE_UPLOAD = gql(_templateObject());\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Mutation, {\n    mutation: SINGLE_UPLOAD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, singleUpload => React.createElement(\"input\", {\n    type: \"file\",\n    required: true,\n    onChange: ({\n      target: {\n        files: [file]\n      }\n    }) => {\n      debugger;\n      validity.valid && singleUpload({\n        variables: {\n          file\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bravesoft/Archive/graphql/upload-img/src/App.js"],"names":["React","Mutation","gql","SINGLE_UPLOAD","App","singleUpload","target","files","file","validity","valid","variables"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,aAAa,GAAGD,GAAH,mBAAnB;;AAWP,SAASE,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAED,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,YAAY,IACX;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AACE,IAAA,QAAQ,EACN,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAACC,IAAD;AAAT;AAAV,KAAD,KAAmC;AACjC;AACAC,MAAAA,QAAQ,CAACC,KAAT,IAAkBL,YAAY,CAAC;AAAEM,QAAAA,SAAS,EAAE;AAAEH,UAAAA;AAAF;AAAb,OAAD,CAA9B;AACD,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAgBD;;AAED,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nexport const SINGLE_UPLOAD = gql`\n  mutation singleUpload($file: Upload!) {\n    singleUpload(file: $file) {\n      filename\n      mimetype\n      encoding\n    }\n  }\n`\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Mutation mutation={SINGLE_UPLOAD}>\n      {singleUpload => (\n        <input type=\"file\" required\n          onChange={\n            ({ target: { files: [file] } }) => {\n              debugger\n              validity.valid && singleUpload({ variables: { file } })\n            }\n          }\n        />\n      )}\n    </Mutation>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}