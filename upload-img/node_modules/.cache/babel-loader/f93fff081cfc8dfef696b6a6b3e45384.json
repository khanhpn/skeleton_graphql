{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/bravesoft/Archive/graphql/upload-img/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/bravesoft/Archive/graphql/upload-img/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation singleUpload($file: Upload!) {\\n    singleUpload(file: $file) {\\n      filename\\n      mimetype\\n      encoding\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './App.css';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nexport const SINGLE_UPLOAD = gql(_templateObject());\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Mutation, {\n    mutation: SINGLE_UPLOAD,\n    refetchQueries: () => {\n      return [{\n        query: QueryPhase.WISH_LIST,\n        variables: {\n          group_id: localStorage.getItem('group_id'),\n          current_page: 1\n        }\n      }];\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, singleUpload => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    id: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bravesoft/Archive/graphql/upload-img/src/App.js"],"names":["React","Query","gql","SINGLE_UPLOAD","App","query","QueryPhase","WISH_LIST","variables","group_id","localStorage","getItem","current_page","singleUpload"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,aAAa,GAAGD,GAAH,mBAAnB;;AAWP,SAASE,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAED,aAApB;AAAmC,IAAA,cAAc,EAAE,MAAM;AACnD,aAAO,CAAC;AACNE,QAAAA,KAAK,EAAEC,UAAU,CAACC,SADZ;AAENC,QAAAA,SAAS,EAAE;AAACC,UAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;AAA6CC,UAAAA,YAAY,EAAE;AAA3D;AAFL,OAAD,CAAP;AAID,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKC,YAAY,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPN,CADF,CADF;AAgBD;;AAED,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nexport const SINGLE_UPLOAD = gql`\n  mutation singleUpload($file: Upload!) {\n    singleUpload(file: $file) {\n      filename\n      mimetype\n      encoding\n    }\n  }\n`\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Mutation mutation={SINGLE_UPLOAD} refetchQueries={() => {\n            return [{\n              query: QueryPhase.WISH_LIST,\n              variables: {group_id: localStorage.getItem('group_id'), current_page: 1}\n            }]\n          }}>\n          {singleUpload => (\n            <form>\n              <input type=\"file\" id=\"input\"></input>\n            </form>\n          )}\n        </Mutation>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}