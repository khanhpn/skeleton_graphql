{"ast":null,"code":"var _jsxFileName = \"/Users/bravesoft/Archive/graphql/upload-img/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'dotenv/config';\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\nconst cache = new InMemoryCache();\nconst httpLink = new HttpLink({\n  uri: process.env.LINK_API,\n  headers: {\n    authorization: \"Bearer \".concat(process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN)\n  }\n});\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n});\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n})), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/bravesoft/Archive/graphql/upload-img/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","ApolloClient","HttpLink","InMemoryCache","ApolloProvider","cache","httpLink","uri","process","env","LINK_API","headers","authorization","REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN","client","link","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,eAAP;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,MAAMC,KAAK,GAAG,IAAIF,aAAJ,EAAd;AACA,MAAMG,QAAQ,GAAG,IAAIJ,QAAJ,CAAa;AAC5BK,EAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,QADW;AAE5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,mBAAaJ,OAAO,CAACC,GAAR,CAAYI,sCAAzB;AADN;AAFmB,CAAb,CAAjB;AAOA,MAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,EAAAA,IAAI,EAAET,QADwB;AAE9BD,EAAAA;AAF8B,CAAjB,CAAf;AAKAP,QAAQ,CAACkB,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIAG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJA;AAMAlB,aAAa,CAACmB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'dotenv/config';\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\n\nconst cache = new InMemoryCache();\nconst httpLink = new HttpLink({\n  uri: process.env.LINK_API,\n  headers: {\n    authorization: `Bearer ${ process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN }`\n  }\n});\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}