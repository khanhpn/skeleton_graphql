{"ast":null,"code":"import { ReactNativeFile } from './ReactNativeFile';\nexport function extractFiles(value, path) {\n  if (path === void 0) {\n    path = '';\n  }\n\n  var clone;\n  var files = new Map();\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);else files.set(file, paths);\n  }\n\n  if (typeof File !== 'undefined' && value instanceof File || typeof Blob !== 'undefined' && value instanceof Blob || value instanceof ReactNativeFile) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList) clone = Array.prototype.map.call(value, function (file, i) {\n      addFile(['' + prefix + i], file);\n      return null;\n    });else if (Array.isArray(value)) clone = value.map(function (child, i) {\n      var result = extractFiles(child, '' + prefix + i);\n      result.files.forEach(addFile);\n      return result.clone;\n    });else if (value && value.constructor === Object) {\n      clone = {};\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return {\n    clone: clone,\n    files: files\n  };\n}","map":null,"metadata":{},"sourceType":"module"}